
#pragma kernel CSMain

RWStructuredBuffer<float3> vertexBuffer;

float3 sphereLocation;
float sphereRadius;

int numVertexes;

[numthreads(1024,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{

    float3 normal = normalize(vertexBuffer[id.x]);
    float3 newPos = normal;

    if (length(newPos - sphereLocation) < sphereRadius)
    {
        float3 sphereNormal = normalize(newPos - sphereLocation);
        float distanceFromCenter = length(newPos - sphereLocation);
        float difference = pow(pow(sphereRadius, 2) - pow(distanceFromCenter, 2), .5f);
        newPos = newPos - (difference * normal);
    }
    
    
    vertexBuffer[id.x] = newPos;
}

